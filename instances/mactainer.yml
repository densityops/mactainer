# This is an example for building the open source components of Docker for Mac
kernel:
  image: linuxkit/kernel:5.10.47  
  cmdline: "earlyprintk=serial page_poison=1 vsyscall=emulate panic=1 nospec_store_bypass_disable noibrs noibpb no_stf_barrier mitigations=off console=ttyS0 console=ttyS1"
init:
  - quay.io/densityops/vpnkit-expose-port:16ed722e  # install vpnkit-expose-port and vpnkit-iptables-wrapper on host
  - quay.io/densityops/vpnkit-forwarder:16ed722e
  # vpnkit sockets
  - quay.io/densityops/vpnkit-9pmount-vsock:16ed722e 
  - quay.io/densityops/vpnkit-tap-vsockd:16ed722e
  - linuxkit/init:78fb57c7da07c4e43c3a37b27755581da087a3b6
  - linuxkit/runc:bf1e0c61fb4678d6428d0aabbd80db5ea24e4d4d
  - linuxkit/containerd:cc02c2af9c928c2faeccbe4edc78bd297ad91866
  - linuxkit/ca-certificates:4df823737c9bf6a9564b736f1a19fd25d60e909a
  - linuxkit/getty:v0.8
onboot:
  # support data for optional config in /run/config
  - name: metadata
    image: linuxkit/metadata:91125438842110e7709811997815b7b33dc18d1d
  - name: sysctl
    image: linuxkit/sysctl:02d2bd74509fd063857ceb4c4f502f09ee4f2e0a
    binds:
    - /etc/sysctl.d/01-ipv4.ip_forward.conf:/etc/sysctl.d/01-ipv4.ip_forward.conf
    - /etc/sysctl.d/02-pid_max.conf:/etc/sysctl.d/02-pid_max.conf
    - /etc/sysctl.d/03-ephemeral-port-clash.conf:/etc/sysctl.d/03-ephemeral-port-clash.conf
  - name: sysfs
    image: linuxkit/sysfs:3498aa99c90a29439b5a1926f6ffcd75c270372c
  - name: binfmt
    image: linuxkit/binfmt:5567917e7de481e4867d31c7490a0ebdb70e04a5
  # Format and mount the disk image in /var/lib/docker
  - name: format
    image: linuxkit/format:fdad8c50d594712537f94862dab3d955cbb48fc3
  - name: mount
    image: linuxkit/mount:71c868267a4503f99e84fd7698717a3669d9dfdb
    command: ["/usr/bin/mountie", "/var/lib"]
  - name: services0
    image: linuxkit/ip:v0.8
    binds:
    - /run/config/net:/run/config/net
    command:
    - sh
    - -c
    - ip link set dev services0 up && ip address add dev services0 $(cat /run/config/net/services)
      peer $(cat /run/config/net/internal)
    net: new
    runtime:
      interfaces:
      - name: services0
        add: veth
        peer: services1
        createInRoot: false
      bindNS:
        net: /run/netns/services
  - name: services1
    image: linuxkit/ip:v0.8
    binds:
    - /run/config/net:/run/config/net
    command:
    - sh
    - -c
    - ip link set dev services1 up && ip address add dev services1 $(cat /run/config/net/internal)
      peer $(cat /run/config/net/services)

  # make a swap file on the mounted disk
  - name: swap
    image: linuxkit/swap:0028aeae2741d28120e4d2c6efcc5af003eae395
    binds:
    - /var:/var
    - /dev:/dev
    - /run:/run
    command:
    - sh
    - -c
    - /swap.sh --path /var/lib/swap --size $(cat /run/config/swap/size)
  # mount-vpnkit mounts the 9p share used by vpnkit to coordinate port forwarding
  - name: mount-vpnkit
    image: alpine:3.13
    binds:
        - /var/:/host_var:rbind,rshared
    capabilities:
        - CAP_SYS_ADMIN
    rootfsPropagation: shared
    command: ["sh", "-c", "mkdir -p /host_var/vpnkit/port && mount -v -t 9p -o trans=virtio,dfltuid=1001,dfltgid=50,version=9p2000 port /host_var/vpnkit"]
  # move logs to the mounted disk (this is a temporary fix until we can limit the log sizes)
  - name: move-logs
    image: alpine:3.13
    binds:
        - /var:/host_var
    command: ["sh", "-c", "mv -v /host_var/log /host_var/lib && ln -vs /var/lib/log /host_var/log"]
  - name: dhcpcd
    image: linuxkit/dhcpcd:1033f340e2d42f86a60aab70752346f0045ea388
    command: ["/sbin/dhcpcd", "--nobackground", "-f", "/dhcpcd.conf", "-1"]
services:
  # Enable acpi to shutdown on power events
  - name: acpid
    image: linuxkit/acpid:d2ddd88c7918466f875e7c5c3e527b51dfb0b0ea
  - name: ntpd
    image: linuxkit/openntpd:66f25a516c7460f5e49195309cf276903741c428
  # VSOCK to unix domain socket forwarding. Forwards guest /var/run/docker.sock
  # to a socket on the host.
  - name: vsudd
    image: quay.io/densityops/vsudd:f8cee7d   
    binds:
        - /var/run:/var/run
    command: ["/vsudd", "-inport", "2376:unix:/var/run/guest/docker.sock"]
  # Monitor for image deletes and invoke a TRIM on the container filesystem
  - name: trim-after-delete
    image: linuxkit/trim-after-delete:ac6307a62c926a49a067d4de8667c2789b5ce2c9
    binds:
      - /var/run/guest:/var/run
  # When the host resumes from sleep, force a clock resync
  - name: host-timesync-daemon
    image: linuxkit/host-timesync-daemon:32fec3fc7d03e5600ef88526c8f187cf21e8e0cc
  # Run dockerd with the vpnkit userland proxy from the vpnkit-forwarder container.
  # Bind mounts /var/run to allow vsudd to connect to docker.sock, /var/vpnkit
  # for vpnkit coordination and /run/config/docker for the configuration file.
  - name: docker
    image: docker:20.10.8-dind
    capabilities:
     - all
    net: host
    mounts:
     - type: bind
       source: /sys/fs/cgroup
       destination: /sys/fs/cgroup
       options: ["rw","nosuid","noexec","nodev","relatime", "rbind", "rshared"]
    rootfsPropagation: shared
    cgroupsPath: podruntime/docker
    binds:
     - /dev:/dev
     - /var/log:/var/log
     - /etc/resolv.conf:/etc/resolv.conf
     - /var/lib/docker:/var/lib/docker
     - /lib/modules:/lib/modules
     - /var/vpnkit:/port # vpnkit control 9p mount
     - /run/config/docker:/run/config/docker
     - /run/guest:/run
     - /run/host:/run/host
     - /run/guest:/var/run
     - /usr/bin/vpnkit-expose-port:/usr/bin/vpnkit-expose-port # userland proxy
     - /usr/bin/vpnkit-expose-port-wrapper:/usr/bin/vpnkit-expose-port-wrapper
     - /etc/vpnkit-expose-port.json:/etc/vpnkit-expose-port.json
     - /usr/bin/vpnkit-iptables-wrapper:/usr/bin/iptables # iptables wrapper
    command: [ "/usr/local/bin/docker-init", "/usr/local/bin/dockerd", "--",
            "--userland-proxy-path", "/usr/bin/vpnkit-expose-port-wrapper",
            "--config-file", "/run/config/docker/daemon.json",
            "--swarm-default-advertise-addr=eth0",
            "--storage-driver", "overlay2" ]
            # "--host-gateway-ip", "192.168.65.2",
            # "--containerd", "/var/run/containerd/containerd.sock",
    runtime:
      mkdir: ["/var/lib/docker"]
      cgroups:
      - systemreserved
      - podruntime
      - kubepods
files:
  - path: /etc/mdev.conf
    directory: false
    contents: |
      .* 0:0 666
    optional: false
  - path: /var/opt/containerd
    directory: true
    optional: false
  # create guest directories
  - path: /etc/init.d/005-vpnkit-forward
    directory: false
    contents: |
      #!/bin/sh
      /usr/bin/vpnkit-forwarder -debug -data-listen 3/62373 -control-listen /run/host/backend.sock &
    optional: false
    mode: "0755"
  - path: /etc/init.d/001-guest-host
    directory: false
    contents: |
      #!/bin/sh
      mkdir -p /run/guest /run/host
    optional: false
    mode: "0755"
  - path: /etc/vpnkit-expose-port.json
    directory: false
    contents: '{"control": "/run/host/backend.sock", "local-bind": "never"}'
    optional: false
  - path: /usr/bin/vpnkit-expose-port-wrapper
    directory: false
    contents: |
      #!/bin/sh
      /usr/bin/vpnkit-expose-port -local-bind never $@
    optional: false
    mode: "0755"
  - path: /etc/os-release
    directory: false
    contents: |
      PRETTY_NAME="mactainer"
    optional: false
  - path: /etc/host-hypervisor
    directory: false
    contents: |
      hyperkit
    optional: false
  - path: /etc/hostname
    directory: false
    contents: mactainer
    optional: false
  - path: /etc/linuxkit.yml
    directory: false
    metadata: yaml
    optional: false
  - path: /containers/services
    directory: true
    optional: false
  - path: /etc/sysctl.d/01-ipv4.ip_forward.conf
    directory: false
    contents: net.ipv4.ip_forward = 1
    optional: false
  - path: /etc/sysctl.d/02-pid_max.conf
    directory: false
    contents: kernel.pid_max = 99999
    optional: false
  - path: /etc/sysctl.d/03-ephemeral-port-clash.conf
    directory: false
    contents: net.ipv4.ip_local_port_range = 55000 65535
    optional: false
  - path: /etc/sysfs.d/10-sda-timeout.conf
    directory: false
    contents: block/sda/device/timeout = 180
    optional: false
  - path: /etc/containerd/config.toml
    directory: false
    contents: |
      state = "/run/containerd"
      root = "/var/lib/containerd"
      disabled_plugins = ["cri"]
      [grpc]
        address = "/run/containerd/containerd.sock"
        uid = 0
        gid = 0
      [debug]
        address = "/run/containerd/debug.sock"
        level = "debug"
      [metrics]
        address = ""
      [plugins.linux]
        runtime = "runc"
        shim_debug = true
      [plugins.opt]
        path = "/var/opt/containerd"
  - path: /var/lib/docker-containerd
    directory: true
    optional: false
  - path: /etc/containerd/docker-config.toml
    directory: false
    contents: |
      root = "/var/lib/docker-containerd/daemon"
      state = "/var/run/docker-containerd/daemon"
      plugin_dir = ""
      disabled_plugins = ["cri"]
      oom_score = -500

      [grpc]
        address = "/var/run/docker-containerd/containerd.sock"
        tcp_address = ""
        tcp_tls_cert = ""
        tcp_tls_key = ""
        uid = 0
        gid = 0
        max_recv_message_size = 16777216
        max_send_message_size = 16777216

      [debug]
        address = "/var/run/docker-containerd/containerd-debug.sock"
        uid = 0
        gid = 0
        level = "debug"

      [metrics]
        address = ""
        grpc_histogram = false

      [cgroup]
        path = ""

      [plugins]
        [plugins.linux]
          shim = "containerd-shim"
          runtime = "runc"
          runtime_root = "/usr/bin/runc"
          no_shim = false
          shim_debug = true
  #- path: /etc/init.d/030-docker-containerd
  #  directory: false
  #  contents: |
  #    #!/bin/sh
  #    mkdir -p /run/docker-containerd
  #    /usr/bin/containerd --config /etc/containerd/docker-config.toml &
  #  optional: false
  #  mode: "0755"
